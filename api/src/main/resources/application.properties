server.port=1234

spring.datasource.url=jdbc:postgresql://155.230.118.78:54321/2023_Earthquake
spring.datasource.username=eqms
spring.datasource.password=1234

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

spring.redis.host=127.0.0.1
spring.redis.port=6379

spring.jackson.serialization.fail-on-empty-beans: false
spring.data.redis.repositories.enabled=false

spring.kafka.bootstrap-servers=155.230.118.234:18711
spring.kafka.consumer.group-id=cr-alert-mobile
spring.kafka.consumer.auto-offset-reset=latest

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.key.deserializer.encoding=UTF-8
spring.kafka.consumer.properties.value.deserializer.encoding=UTF-8
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

// firebase-realtime-database.database-url=https://eq-64f1a-default-rtdb.firebaseio.com/
